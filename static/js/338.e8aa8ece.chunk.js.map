{"version":3,"file":"static/js/338.e8aa8ece.chunk.js","mappings":"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","sources":["webpack://delivery_app/./src/shared/components/Modal/modal.module.css?5f6f","shared/components/Modal/Modal.jsx","shared/services/customer.js","components/OrderForm/orderForm.module.css","components/OrderForm/OrderForm.jsx","components/Cart/cart.module.css","components/Cart/Cart.jsx","pages/CartPage/CartPage.jsx","redux/shops/shops-selector.js","webpack://delivery_app/./src/shared/components/Container/container.module.css?d150","shared/components/Container/Container.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"modal_overlay__pPsai\",\"modal\":\"modal_modal__Kap2h\"};","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\n\nimport s from './modal.module.css';\n\nconst modalRoot = document.getElementById('modal-root');\n\nfunction Modal({ close, children }) {\n  useEffect(() => {\n    document.addEventListener('keydown', closeModal);\n\n    return () => document.removeEventListener('keydown', closeModal);\n  });\n\n  const closeModal = e => {\n    if (e.code === 'Escape') {\n      close();\n      return;\n    }\n    if (e.target === e.currentTarget) {\n      close();\n    }\n  };\n\n  return createPortal(\n    <div className={s.overlay} onClick={closeModal}>\n      <div className={s.modal}>{children}</div>\n    </div>,\n    modalRoot\n  );\n}\n\nModal.propTypes = {\n  close: PropTypes.func.isRequired,\n};\n\nexport default Modal;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://62c004aad40d6ec55cc963d5.mockapi.io/api/v1/customers',\n});\n\nexport const addUser = async body => {\n  const { data } = await instance.post('/', body);\n  return data;\n};\n\n// export const getAllUser = async () => {\n//   const { data } = await instance.get('/');\n//   return data;\n// };\n\n// export const getById = async id => {\n//   const { data } = await instance.get(`/${id}`);\n//   return data;\n// };\n\n// export const deleteUser = async id => {\n//   const { data } = await instance.delete(`/${id}`);\n//   return data;\n// };\n","// extracted by mini-css-extract-plugin\nexport default {};","import { useState, useCallback } from 'react';\n\nimport { Notify } from 'notiflix';\n\nimport { addUser } from 'shared/services/customer';\nimport s from './orderForm.module.css';\n\nconst OrderForm = () => {\n  const [formData, setFormData] = useState({\n    name: '',\n    phone: '',\n    email: '',\n    address: '',\n  });\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const fetchUserData = useCallback(async data => {\n    setIsLoading(prevState => true);\n    setError(prevState => null);\n    try {\n      const userData = await addUser(data);\n      setIsLoading(prevState => false);\n      Notify.success(\n        `${userData.name}, your order was successfully accepted, our manager will contact you ASAP`\n      );\n    } catch (error) {\n      setError(prevState => error);\n      Notify.error(` order was not accepted, please try again later`);\n    }\n  }, []);\n\n  const handleChange = useCallback(\n    ({ target }) => {\n      const { name, value } = target;\n      setFormData(prevState => ({\n        ...prevState,\n        [name]: value,\n      }));\n    },\n    [setFormData]\n  );\n\n  const createOrder = useCallback(\n    async e => {\n      e.preventDefault();\n      console.log(formData);\n      const data = await fetchUserData(formData);\n      console.log(data);\n      setFormData({ name: '', phone: '', email: '', address: '' });\n    },\n    [fetchUserData, formData]\n  );\n\n  const { name, phone, email, address } = formData;\n\n  return (\n    <form className={s.form} onSubmit={createOrder}>\n      <label htmlFor=\"name\" className={s.label}>\n        Name\n      </label>\n      <input\n        onChange={handleChange}\n        required\n        className={s.input}\n        value={name}\n        name=\"name\"\n        type=\"text\"\n        id=\"name\"\n        placeholder=\"Name\"\n      />\n      <label htmlFor=\"email\" className={s.label}>\n        Email\n      </label>\n      <input\n        onChange={handleChange}\n        required\n        className={s.input}\n        value={email}\n        name=\"email\"\n        type=\"email\"\n        id=\"email\"\n        placeholder=\"Email\"\n      />\n      <label htmlFor=\"phone\" className={s.label}>\n        Phone\n      </label>\n      <input\n        onChange={handleChange}\n        required\n        className={s.input}\n        value={phone}\n        name=\"phone\"\n        type=\"phone\"\n        id=\"phone\"\n        placeholder=\"Phone\"\n      />\n      <label htmlFor=\"address\" className={s.label}>\n        Address\n      </label>\n      <input\n        onChange={handleChange}\n        required\n        className={s.input}\n        value={address}\n        name=\"address\"\n        type=\"text\"\n        id=\"address\"\n        placeholder=\"Address\"\n      />\n      <button className={s.button} type=\"submit\">\n        {isLoading ? 'Loading...' : 'Order'}\n      </button>\n\n      {error && <p className={s.error}>{error.message}</p>}\n    </form>\n  );\n};\nexport default OrderForm;\n","// extracted by mini-css-extract-plugin\nexport default {};","import { useSelector, shallowEqual } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { useCallback, useState } from 'react';\n\nimport Modal from 'shared/components/Modal';\nimport OrderForm from 'components/OrderForm';\n\nimport * as actions from 'redux/shops/shops-slice';\nimport { getProducts } from 'redux/shops/shops-selector';\nimport s from './cart.module.css';\n\nconst Cart = () => {\n  const dispatch = useDispatch();\n  const products = useSelector(getProducts, shallowEqual);\n\n  const [modal, setModal] = useState({\n    isOpen: false,\n  });\n\n  const totalPrice = products\n    .reduce((acc, item) => acc + item.price, 0)\n    .toFixed(2);\n  // elements.reduce((acc, item) => acc + item.quantity * item.price, 0).toFixed(2)\n\n  const deleteProduct = useCallback(\n    id => dispatch(actions.deleteProducts(id)),\n    [dispatch]\n  );\n\n  const clearCart = useCallback(\n    () => dispatch(actions.clearCart()),\n    [dispatch]\n  );\n\n  const showModal = useCallback(() => {\n    setModal({\n      isOpen: true,\n    });\n  }, [setModal]);\n\n  const closeModal = useCallback(() => {\n    setModal({\n      isOpen: false,\n    });\n  }, [setModal]);\n\n  const elements = products.map(({ name, url, price, text, id }) => (\n    <li key={id} className={s.cartCard}>\n      <img src={url} alt={`Product ${name}`} className={s.cartImg} />\n      <p className={s.title}>{name}</p>\n      <p className={s.price}>Price: {price} $</p>\n      <button\n        type=\"button\"\n        className={s.deleteBtn}\n        onClick={() => deleteProduct(id)}\n      >\n        Delete\n      </button>\n    </li>\n  ));\n\n  const { isOpen } = modal;\n  return (\n    <>\n      <ul className={s.cart}>{elements}</ul>\n      <div>\n        <p className={s.total}>Total price {totalPrice} $</p>\n        <button type=\"button\" className={s.btn} onClick={showModal}>\n          Create Order\n        </button>\n        <button type=\"button\" className={s.btn} onClick={clearCart}>\n          Clear cart\n        </button>\n      </div>\n      {isOpen && (\n        <Modal close={closeModal}>\n          <OrderForm />\n        </Modal>\n      )}\n    </>\n  );\n};\n\nexport default Cart;\n","import Cart from 'components/Cart';\nimport Container from 'shared/components/Container';\n\nconst CartPage = () => {\n  return (\n    <Container>\n      <Cart />\n    </Container>\n  );\n};\n\nexport default CartPage;\n","export const getShopId = state => state.shops.activeId;\n\nexport const getProducts = state => state.shops.products;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"container_container__7D7mb\",\"title\":\"container_title__qyPiS\"};","import PropTypes from 'prop-types';\n\nimport s from './container.module.css';\n\nfunction Container({ title, children }) {\n  return (\n    <div className={s.container}>\n      <h2 className={s.title}>{title}</h2>\n      {children}\n    </div>\n  );\n}\n\nContainer.defaultProps = {\n  title: '',\n};\nContainer.propTypes = {\n  title: PropTypes.string,\n};\n\nexport default Container;\n//\n"],"names":["modalRoot","document","getElementById","close","children","useEffect","addEventListener","closeModal","removeEventListener","e","code","target","currentTarget","createPortal","className","s","onClick","instance","axios","baseURL","addUser","body","post","data","useState","name","phone","email","address","formData","setFormData","isLoading","setIsLoading","error","setError","fetchUserData","useCallback","prevState","userData","Notify","handleChange","value","createOrder","preventDefault","console","log","onSubmit","htmlFor","onChange","required","type","id","placeholder","message","dispatch","useDispatch","products","useSelector","getProducts","shallowEqual","isOpen","modal","setModal","totalPrice","reduce","acc","item","price","toFixed","deleteProduct","actions","clearCart","showModal","elements","map","url","text","src","alt","Container","getShopId","state","shops","activeId","title","defaultProps"],"sourceRoot":""}